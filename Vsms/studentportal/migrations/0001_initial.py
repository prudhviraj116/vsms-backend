# Generated by Django 5.0.3 on 2024-09-05 10:05

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('batch_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('batch_name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=15)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Placement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=15)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='DailyVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('video_file', models.FileField(upload_to='daily_videos/')),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studentportal.batch')),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_date', models.DateField()),
                ('session_type', models.CharField(choices=[('Lab', 'Lab'), ('Weekelytest', 'WeekelyTest'), ('WeekelyMock', 'WeekelyMock')], default='Lab', max_length=50)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studentportal.batch')),
            ],
            options={
                'unique_together': {('batch', 'session_date', 'session_type')},
            },
        ),
        migrations.CreateModel(
            name='Student_tabel',
            fields=[
                ('student_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('mobile_no', models.BigIntegerField()),
                ('Gender', models.CharField(choices=[('Female', 'Female'), ('Male', 'Male'), ('Other', 'Other')], default='Male', max_length=20)),
                ('address', models.CharField(max_length=24, null=True)),
                ('Image', models.ImageField(blank=True, null=True, upload_to='Images/staffimages/')),
                ('Qulification', models.CharField(max_length=10, null=True)),
                ('resume', models.FileField(blank=True, upload_to='resumes/')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studentportal.batch')),
                ('userrole', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Fee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('fee_status', models.CharField(choices=[('paid', 'Paid'), ('pending', 'Pending')], default='pending', max_length=20)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='studentportal.student_tabel')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_type', models.CharField(choices=[('Weekly Test', 'Weekly Test'), ('Lab Task', 'Lab Task'), ('Notification', 'Notification')], max_length=20)),
                ('content', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='task_images/')),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studentportal.batch')),
            ],
        ),
        migrations.CreateModel(
            name='Attendancelist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('present', models.BooleanField(default=False)),
                ('marked_at', models.DateField(blank=True, null=True)),
                ('marks', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studentportal.session')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studentportal.student_tabel')),
            ],
            options={
                'unique_together': {('student', 'session')},
            },
        ),
    ]
